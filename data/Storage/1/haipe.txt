Encryption in an IP network with High Assurance IP Encryptors (HAIPE) may retain plain-text information in the IP header, including the source address, destination address, and the type of service (ToS) (iDirect p. 2). The packet can be simplified to the plain-text header, the encrypted payload, and then error correction or appended information:

The plain-text information provides a great deal of information to an adversary. The exposed traffic details allows attackers to infer traffic volume, priority traffic, and traffic type. Consequently, efforts to encrypt the entire HAIPE IP packet should be undertaken. Encrypting the entire packet not only protects the header and re-encrypts the payload, but layer 2 encryption with fixed frames or padding randomization will obscure the HAIPE packet’s length for additional metadata protection. This is a simplified presentation of the layer 2 encrypted 

The specific integration step to achieve layer 2 encryption is to use a layer 2 encryptor on the black side. Bulk encryptors should be placed between the TACLANE’s black interface and the untrusted network (Department of Defense, 2013, 12–5). These will encapsulate the output Ethernet frames into an encrypted link layer frame, so the HAIPE IP header is protected before continued transmission. The layer 2 encryptor is easily integrated; it is simply an additional hop. It is also compatible with inner packet encryptions such as tunnel mode IPsec, the link encryptor will just wrap it.
Covert channels are communication channels not designed for information transfer (Epishkina & Kogos, p. 1107). There are two principal types of covert channels: storage and timing. Storage channels allow for information to be “hidden within the protocol data and metadata” and readable by another entity (Prendergast, 2017, p. 1). An example of a storage channel would be modifying a packet’s length to create a binary communication medium where packets less than x bytes represent a 0 and packets greater than x bytes represent a 1. Timing channels manipulate packet transfer rates to create communication mediums (Epishkina & Kogos, p. 1107). An example of a timing channel would be modifying the time gap between packets to create a binary communication medium where the a difference between two packets less than x ms represents a 0 and a time difference greater than x ms represents a 1 (Prendergast, 2017, p. 2).
While covert channels may never be entirely eliminated, storage channels are greatly mitigated by previously discussed mechanisms to protect the HAIPE packet’s metadata through layer 2 bulk encryptors and fixed frame or randomized padding transmission. Timing channels are more difficult to defeat, as the most effective mitigation “is simply to flood the channel so that packets are being sent at the maximum rate in a way that is unaffected by the timing of the input. While this would eliminate any timing channel it would also saturate the shared bandwidth of the network for all devices” (Prendergast, 2017, p. 7).
The consensus mitigation for timing channels has coalesced around sending dummy packets create additional noise to disrupt timing analysis without dramatically impacting network capacity. The essential principle is that the covert communication sender and receiver must possess some sort of symmetrical knowledge in order to utilize the covert channel; i.e., they must both understand the parameters by which they derive information from the channel. If this standard is established, such as packet delays of 0–30 ms representing a binary 0, then the two parties must maintain synchronization to properly interpret results. This is to say that the sender and recipient both must be tracking the same initial packet and subsequent packet to properly measure the delay and the resulting information transfer.
Since the communications rely on a continuous packet mapping, dummy packets interrupt the channel’s synchronization, temporarily disrupting covert information integrity until resynchronization. For the dummy packets to remain effective, their interval must remain random. Therefore, the interval between legitimate and dummy packets will vary. However, given “the number of packets i between dummy packets is the value of random variable that is uniformly distributed at the Nk, k ∈ N where k is the parameter of a counteraction tool,” this will on average result in 1 dummy packet per 3 legitimate packets for a standard communication channel capacity (Epishkina & Kogos, p. 1108; p. 1111).
    1. The immediate consideration is to ensure there is no use of Cipher Block Chaining (CBC) ciphers. CBC ciphers typically authenticate data and then encrypt it, so that “to decode a block, [you] decrypt the entire message, look at the last byte, remove it, and remove that many bytes of padding. This gives you the location of the HMAC” (Sullivan, 2016). Critically, the padding is unathenticated, and beyond the serious potential issues for decryption, this unauthenticated padding can be leveraged for covert storage channels.
    2. The secondary consideration involves implementing non-redundant forms of cryptography. Much is currently being made about the move to post-quantum cryptography, but the emerging leader in adoption, Kyber, does not directly reach the AES-128 security level, since AES-128 needs more than 2^140 bit operations to break while the Core-SVP security estimate for Kyber-512 is only 2^118 (Bernstein, 2023). Thus, combining different types (lattice and non-lattice) in a hybrid implementation (Kyber and AES) is recommended in the immediate short-term.
